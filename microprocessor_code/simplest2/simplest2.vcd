$date
	Wed Jan 22 22:09:22 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module simplest2_tb $end
$var wire 1 ! accumulator_output $end
$var reg 1 " clk $end
$var reg 1 # counter_ram8_reset $end
$var reg 1 $ preset $end
$scope module uut $end
$var wire 1 " clk $end
$var wire 1 # counter_ram8_reset $end
$var wire 1 $ preset $end
$var wire 8 % ram8_out [7:0] $end
$var wire 1 & p_out $end
$var wire 1 ' mux_out $end
$var wire 1 ( d $end
$var wire 16 ) count_out [15:0] $end
$var wire 1 ! accumulator_output $end
$var reg 1 * accumulator_flipflop_preset $end
$var reg 1 + preset_flipflop_input $end
$var reg 1 , ram1_clear $end
$var reg 1 - ram8_clear $end
$scope module accumulator_flipflop $end
$var wire 1 " clk $end
$var wire 1 * preset $end
$var wire 1 ! q $end
$var wire 1 ' datain $end
$var reg 1 ! q_reg $end
$upscope $end
$scope module counter_ram8 $end
$var wire 1 " clk $end
$var wire 1 # reset $end
$var wire 16 . count [15:0] $end
$var reg 16 / count_reg [15:0] $end
$upscope $end
$scope module mux $end
$var wire 1 0 A $end
$var wire 1 ' Y $end
$var wire 1 & Sel $end
$var wire 1 ( B $end
$upscope $end
$scope module preset_flipflop $end
$var wire 1 " clk $end
$var wire 1 + datain $end
$var wire 1 1 preset $end
$var wire 1 & q $end
$var reg 1 & q_reg $end
$upscope $end
$scope module ram1 $end
$var wire 6 2 address [5:0] $end
$var wire 1 , clear $end
$var wire 1 " clk $end
$var wire 1 ! datain $end
$var wire 1 3 store $end
$var wire 1 ( dataout $end
$var integer 32 4 i [31:0] $end
$upscope $end
$scope module ram8 $end
$var wire 16 5 address [15:0] $end
$var wire 1 - clear $end
$var wire 8 6 dataout [7:0] $end
$var integer 32 7 i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx 7
bx 6
bx 5
bx 4
x3
bx 2
x1
x0
bx /
bx .
0-
0,
0+
0*
bx )
x(
x'
x&
bx %
0$
0#
0"
x!
$end
#1000
1'
1(
03
b0 2
b0 %
b0 6
1&
b0 )
b0 .
b0 /
b0 5
11
1#
1$
#3000
01
0#
0$
#5000
0(
10
b1 2
1'
b1 %
b1 6
1!
b1 )
b1 .
b1 /
b1 5
0&
1"
#10000
0"
#15000
0'
1&
11
13
b10 2
b10000010 %
b10000010 6
b10 )
b10 .
b10 /
b10 5
1"
#20000
0"
#25000
01
0'
03
b1 2
b1 %
b1 6
0(
0!
b11 )
b11 .
b11 /
b11 5
1"
#30000
0"
#35000
1(
1'
b10 2
b10 %
b10 6
b100 )
b100 .
b100 /
b100 5
0&
1"
#40000
0"
#45000
1&
0'
0(
11
10
13
b11 2
b10000011 %
b10000011 6
1!
b101 )
b101 .
b101 /
b101 5
1"
#50000
0"
#55000
01
1'
03
b10 2
b10 %
b10 6
1(
0!
b110 )
b110 .
b110 /
b110 5
1"
#60000
0"
#65000
00
b11 2
0'
b11 %
b11 6
1!
b111 )
b111 .
b111 /
b111 5
0&
1"
#70000
0"
#75000
1&
0'
0(
11
10
13
b100 2
b10000100 %
b10000100 6
0!
b1000 )
b1000 .
b1000 /
b1000 5
1"
#80000
0"
#85000
1'
1(
01
03
b11 2
b11 %
b11 6
b1001 )
b1001 .
b1001 /
b1001 5
1"
#90000
0"
#95000
0(
10
b100 2
1'
b100 %
b100 6
1!
b1010 )
b1010 .
b1010 /
b1010 5
0&
1"
#100000
0"
#105000
0'
1&
11
13
b101 2
b10000101 %
b10000101 6
b1011 )
b1011 .
b1011 /
b1011 5
1"
#110000
0"
#115000
x1
x'
x3
bx 2
bx %
bx 6
x(
0!
b1100 )
b1100 .
b1100 /
b1100 5
1"
#120000
0"
#125000
x0
x'
x!
b1101 )
b1101 .
b1101 /
b1101 5
0&
1"
